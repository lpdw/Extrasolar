<?php

namespace Proxies\__CG__\AppBundle\Entity\Extrasolar;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Body extends \AppBundle\Entity\Extrasolar\Body implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'ra', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'distance', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'masse', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'radius', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'density', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'age', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'seff', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'temperature', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'molecules', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'update_at', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'discovery', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'detection', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'decl', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'metallicity', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'spectral_type', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'vari', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'axis', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'period', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'excentricity', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'inclinaison', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'omega', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'tref', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'satellites', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'assoc', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'rotation_id', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'type_id'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'ra', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'distance', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'masse', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'radius', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'density', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'age', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'seff', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'temperature', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'molecules', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'update_at', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'discovery', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'detection', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'decl', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'metallicity', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'spectral_type', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'vari', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'axis', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'period', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'excentricity', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'inclinaison', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'omega', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'tref', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'satellites', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'assoc', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'rotation_id', '' . "\0" . 'AppBundle\\Entity\\Extrasolar\\Body' . "\0" . 'type_id'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Body $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getRa()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRa', []);

        return parent::getRa();
    }

    /**
     * {@inheritDoc}
     */
    public function setRa($ra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRa', [$ra]);

        return parent::setRa($ra);
    }

    /**
     * {@inheritDoc}
     */
    public function getDistance()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDistance', []);

        return parent::getDistance();
    }

    /**
     * {@inheritDoc}
     */
    public function setDistance($distance)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDistance', [$distance]);

        return parent::setDistance($distance);
    }

    /**
     * {@inheritDoc}
     */
    public function getMasse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMasse', []);

        return parent::getMasse();
    }

    /**
     * {@inheritDoc}
     */
    public function setMasse($masse)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMasse', [$masse]);

        return parent::setMasse($masse);
    }

    /**
     * {@inheritDoc}
     */
    public function getRadius()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRadius', []);

        return parent::getRadius();
    }

    /**
     * {@inheritDoc}
     */
    public function setRadius($radius)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRadius', [$radius]);

        return parent::setRadius($radius);
    }

    /**
     * {@inheritDoc}
     */
    public function getDensity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDensity', []);

        return parent::getDensity();
    }

    /**
     * {@inheritDoc}
     */
    public function setDensity($density)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDensity', [$density]);

        return parent::setDensity($density);
    }

    /**
     * {@inheritDoc}
     */
    public function getAge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAge', []);

        return parent::getAge();
    }

    /**
     * {@inheritDoc}
     */
    public function setAge($age)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAge', [$age]);

        return parent::setAge($age);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeff()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeff', []);

        return parent::getSeff();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeff($seff)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeff', [$seff]);

        return parent::setSeff($seff);
    }

    /**
     * {@inheritDoc}
     */
    public function getTemperature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTemperature', []);

        return parent::getTemperature();
    }

    /**
     * {@inheritDoc}
     */
    public function setTemperature($temperature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTemperature', [$temperature]);

        return parent::setTemperature($temperature);
    }

    /**
     * {@inheritDoc}
     */
    public function getMolecules()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMolecules', []);

        return parent::getMolecules();
    }

    /**
     * {@inheritDoc}
     */
    public function setMolecules($molecules)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMolecules', [$molecules]);

        return parent::setMolecules($molecules);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdateAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdateAt', []);

        return parent::getUpdateAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdateAt($update_at)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdateAt', [$update_at]);

        return parent::setUpdateAt($update_at);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiscovery()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiscovery', []);

        return parent::getDiscovery();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiscovery($discovery)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiscovery', [$discovery]);

        return parent::setDiscovery($discovery);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetection', []);

        return parent::getDetection();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetection($detection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetection', [$detection]);

        return parent::setDetection($detection);
    }

    /**
     * {@inheritDoc}
     */
    public function getDecl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecl', []);

        return parent::getDecl();
    }

    /**
     * {@inheritDoc}
     */
    public function setDecl($decl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDecl', [$decl]);

        return parent::setDecl($decl);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetallicity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetallicity', []);

        return parent::getMetallicity();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetallicity($metallicity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetallicity', [$metallicity]);

        return parent::setMetallicity($metallicity);
    }

    /**
     * {@inheritDoc}
     */
    public function getSpectralType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSpectralType', []);

        return parent::getSpectralType();
    }

    /**
     * {@inheritDoc}
     */
    public function setSpectralType($spectral_type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSpectralType', [$spectral_type]);

        return parent::setSpectralType($spectral_type);
    }

    /**
     * {@inheritDoc}
     */
    public function getVari()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVari', []);

        return parent::getVari();
    }

    /**
     * {@inheritDoc}
     */
    public function setVari($vari)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVari', [$vari]);

        return parent::setVari($vari);
    }

    /**
     * {@inheritDoc}
     */
    public function getAxis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAxis', []);

        return parent::getAxis();
    }

    /**
     * {@inheritDoc}
     */
    public function setAxis($axis)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAxis', [$axis]);

        return parent::setAxis($axis);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriod', []);

        return parent::getPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriod($period)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriod', [$period]);

        return parent::setPeriod($period);
    }

    /**
     * {@inheritDoc}
     */
    public function getExcentricity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExcentricity', []);

        return parent::getExcentricity();
    }

    /**
     * {@inheritDoc}
     */
    public function setExcentricity($excentricity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExcentricity', [$excentricity]);

        return parent::setExcentricity($excentricity);
    }

    /**
     * {@inheritDoc}
     */
    public function getInclinaison()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInclinaison', []);

        return parent::getInclinaison();
    }

    /**
     * {@inheritDoc}
     */
    public function setInclinaison($inclinaison)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInclinaison', [$inclinaison]);

        return parent::setInclinaison($inclinaison);
    }

    /**
     * {@inheritDoc}
     */
    public function getOmega()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOmega', []);

        return parent::getOmega();
    }

    /**
     * {@inheritDoc}
     */
    public function setOmega($omega)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOmega', [$omega]);

        return parent::setOmega($omega);
    }

    /**
     * {@inheritDoc}
     */
    public function getTref()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTref', []);

        return parent::getTref();
    }

    /**
     * {@inheritDoc}
     */
    public function setTref($tref)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTref', [$tref]);

        return parent::setTref($tref);
    }

    /**
     * {@inheritDoc}
     */
    public function getRotationId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRotationId', []);

        return parent::getRotationId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRotationId($rotation_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRotationId', [$rotation_id]);

        return parent::setRotationId($rotation_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getTypeId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTypeId', []);

        return parent::getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTypeId($type_id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTypeId', [$type_id]);

        return parent::setTypeId($type_id);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getSatellites()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSatellites', []);

        return parent::getSatellites();
    }

    /**
     * {@inheritDoc}
     */
    public function setSatellites($satellites)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSatellites', [$satellites]);

        return parent::setSatellites($satellites);
    }

}
